document.addEventListener('DOMContentLoaded', function() {
    // –î–æ–±–∞–≤–ª—è–µ–º —Ñ–∞–≤–∏–∫–æ–Ω, –µ—Å–ª–∏ –æ–Ω –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
    if (!document.querySelector('link[rel="icon"]')) {
        const favicon = document.createElement('link');
        favicon.rel = 'icon';
        favicon.href = 'data:image/svg+xml,<svg xmlns=%22http://www.w3.org/2000/svg%22 viewBox=%220 0 100 100%22><text y=%22.9em%22 font-size=%2290%22>üìÑ</text></svg>';
        document.head.appendChild(favicon);
    }

    // –ü–æ–ª—É—á–∞–µ–º —ç–ª–µ–º–µ–Ω—Ç—ã —Ñ–æ—Ä–º—ã
    const invoiceForm = document.querySelector('.invoice-form');
    const invoiceItems = document.getElementById('invoice-items');
    const addItemButton = document.getElementById('add-item');
    
    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Ä–∞—Å—á–µ—Ç–∞ –∏—Ç–æ–≥–æ–≤
    updateTotals();
    
    // –í—ã–∑—ã–≤–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é –ø—Ä–µ–¥–∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è —Ñ–æ—Ä–º—ã
    prepopulateFormForEditing();

    // –£—Å—Ç–∞–Ω–æ–≤–∫–∞ —Ç–µ–∫—É—â–µ–π –¥–∞—Ç—ã –¥–ª—è –ø–æ–ª–µ–π —Å –¥–∞—Ç–æ–π, –µ—Å–ª–∏ –æ–Ω–∏ –ø—É—Å—Ç—ã–µ
    setDefaultDates();
    
    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∫–∞—Å—Ç–æ–º–Ω—ã—Ö —Å–µ–ª–µ–∫—Ç–æ—Ä–æ–≤
    initializeEntitySelectors();
    
    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Ç–∞–±–ª–∏—Ü—ã —Ç–æ–≤–∞—Ä–æ–≤/—É—Å–ª—É–≥
    initializeInvoiceItems();
    
    // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –¥–µ–Ω–µ–∂–Ω—ã—Ö —Ñ–æ—Ä–º–∞—Ç–æ–≤ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
    formatCurrencyInputs();

    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ –ø—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä–∞
    const previewButton = document.getElementById('preview-invoice');
    if (previewButton) {
        previewButton.addEventListener('click', function() {
            alert('–§—É–Ω–∫—Ü–∏—è –ø—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –±—É–¥–µ—Ç –¥–æ—Å—Ç—É–ø–Ω–∞ –≤ –±–ª–∏–∂–∞–π—à–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏');
        });
    }
});

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å—É–º–º –ø–æ —Å—Ç—Ä–æ–∫–∞–º –∏ –æ–±—â–∏—Ö –∏—Ç–æ–≥–æ–≤ - —Å–¥–µ–ª–∞–Ω–∞ –≥–ª–æ–±–∞–ª—å–Ω–æ–π
function updateTotals() {
    window.updateTotalsLoaded = true; // –û—Ç–º–µ—á–∞–µ–º, —á—Ç–æ –≥–ª–æ–±–∞–ª—å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –∑–∞–≥—Ä—É–∂–µ–Ω–∞
    
    let subtotal = 0;
    let totalDiscount = 0;
    
    // –ü–µ—Ä–µ–±–∏—Ä–∞–µ–º –≤—Å–µ —Å—Ç—Ä–æ–∫–∏ —Ç–æ–≤–∞—Ä–æ–≤
    document.querySelectorAll('.invoice-item').forEach(item => {
        const quantityInput = item.querySelector('input[name="item_quantity[]"]');
        const priceInput = item.querySelector('input[name="item_price[]"]');
        const discountPercentInput = item.querySelector('input[name="item_discount_percent[]"]');
        const discountInput = item.querySelector('input[name="item_discount[]"]');
        
        // –ó–∞–º–µ–Ω—è–µ–º –∑–∞–ø—è—Ç—É—é –Ω–∞ —Ç–æ—á–∫—É –¥–ª—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–≥–æ –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏—è
        const quantity = parseFloat((quantityInput.value || '0').replace(',', '.')) || 0;
        const price = parseFloat((priceInput.value || '0').replace(',', '.')) || 0;
        const discountPercent = parseFloat((discountPercentInput?.value || '0').replace(',', '.')) || 0;
        
        // –í—ã—á–∏—Å–ª—è–µ–º —Å—É–º–º—É –ø–æ —Å—Ç—Ä–æ–∫–µ —Å —É—á–µ—Ç–æ–º —Å–∫–∏–¥–∫–∏
        const rowTotal = quantity * price;
        const rowDiscount = rowTotal * (discountPercent / 100);
        const itemTotal = rowTotal - rowDiscount;
        
        // –û–±–Ω–æ–≤–ª—è–µ–º —Å–∫—Ä—ã—Ç–æ–µ –ø–æ–ª–µ —Å–æ —Å–∫–∏–¥–∫–æ–π
        if (discountInput) {
            discountInput.value = rowDiscount.toFixed(2).replace('.', ',');
        }
        
        // –û–±–Ω–æ–≤–ª—è–µ–º —Å—É–º–º—É –ø–æ —Å—Ç—Ä–æ–∫–µ (–∏—Å–ø–æ–ª—å–∑—É–µ–º –∑–∞–ø—è—Ç—É—é –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è)
        item.querySelector('.item-total').textContent = itemTotal.toFixed(2).replace('.', ',');
        
        // –î–æ–±–∞–≤–ª—è–µ–º –∫ –ø–æ–¥—ã—Ç–æ–≥—É –∏ –æ–±—â–µ–π —Å–∫–∏–¥–∫–µ
        subtotal += rowTotal;
        totalDiscount += rowDiscount;
        
        // –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º –æ—Ç–æ–±—Ä–∞–∂–∞–µ–º–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ —Å –∑–∞–ø—è—Ç–æ–π –¥–ª—è UI —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –≤ –ø–æ–ª–µ –µ—Å—Ç—å –∑–Ω–∞—á–µ–Ω–∏–µ
        if (quantityInput.value) {
            quantityInput.value = quantity.toString().replace('.', ',');
        }
        if (priceInput.value) {
            priceInput.value = price.toString().replace('.', ',');
        }
        if (discountPercentInput && discountPercentInput.value) {
            discountPercentInput.value = discountPercent.toString().replace('.', ',');
        }
    });
    
    // –û–±–Ω–æ–≤–ª—è–µ–º –∏—Ç–æ–≥–æ–≤—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è
    const subtotalElem = document.getElementById('subtotal');
    const taxElem = document.getElementById('tax');
    const totalElem = document.getElementById('total');
    const discountDisplay = document.getElementById('discount-display');
    const discountInput = document.getElementById('discount');
    
    if (subtotalElem) subtotalElem.textContent = subtotal.toFixed(2).replace('.', ',') + ' ‚ÇΩ';
    
    // –û–±–Ω–æ–≤–ª—è–µ–º –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∏ —Å–∫—Ä—ã—Ç–æ–µ –ø–æ–ª–µ –æ–±—â–µ–π —Å–∫–∏–¥–∫–∏
    if (discountDisplay) {
        discountDisplay.textContent = totalDiscount.toFixed(2).replace('.', ',') + ' ‚ÇΩ';
    }
    if (discountInput) {
        discountInput.value = totalDiscount.toFixed(2);
    }
    
    // –ü—Ä–∏–º–µ–Ω—è–µ–º —Å–∫–∏–¥–∫—É –∫ –ø–æ–¥—ã—Ç–æ–≥—É
    const subtotalAfterDiscount = Math.max(0, subtotal - totalDiscount);
    
    // –†–∞—Å—á–µ—Ç –ù–î–° (20%) –æ—Ç —Å—É–º–º—ã –ø–æ—Å–ª–µ —Å–∫–∏–¥–∫–∏
    const tax = subtotalAfterDiscount * 0.2;
    if (taxElem) taxElem.textContent = tax.toFixed(2).replace('.', ',') + ' ‚ÇΩ';
    
    // –û–±–Ω–æ–≤–ª—è–µ–º –æ–±—â–∏–π –∏—Ç–æ–≥
    if (totalElem) totalElem.textContent = (subtotalAfterDiscount + tax).toFixed(2).replace('.', ',') + ' ‚ÇΩ';
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –Ω–æ–≤–æ–π —Å—Ç—Ä–æ–∫–∏ —Ç–æ–≤–∞—Ä–∞ - —Å–¥–µ–ª–∞–Ω–∞ –≥–ª–æ–±–∞–ª—å–Ω–æ–π
function addNewItemRow() {
    const invoiceItems = document.getElementById('invoice-items');
    if (!invoiceItems) return;
    
    const newRow = document.createElement('tr');
    newRow.className = 'invoice-item';
    
    // –ò—Å–ø–æ–ª—å–∑—É–µ–º SVG –∏–∫–æ–Ω–∫—É –º—É—Å–æ—Ä–Ω–æ–≥–æ –±–∞–∫–∞, –µ—Å–ª–∏ –¥–æ—Å—Ç—É–ø–Ω–∞ —Ñ—É–Ω–∫—Ü–∏—è getSvgIconHtml
    const trashIcon = window.svgIcons && typeof window.svgIcons.getHtml === 'function' 
        ? window.svgIcons.getHtml('icon-trash') 
        : '<i class="fas fa-trash"></i>';
    
    newRow.innerHTML = `
        <td class="item-name-cell">
            <input type="text" name="item_name[]" title="–ù–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞/—É—Å–ª—É–≥–∏" required>
        </td>
        <td class="item-quantity-cell">
            <div class="quantity-unit-wrapper">
                <input type="text" name="item_quantity[]" title="–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ" required>
                <select name="item_unit[]" title="–ï–¥–∏–Ω–∏—Ü–∞ –∏–∑–º–µ—Ä–µ–Ω–∏—è" class="item-unit">
                    <option value="—à—Ç.">—à—Ç.</option>
                    <option value="—á–∞—Å.">—á–∞—Å.</option>
                    <option value="—É—Å–ª—É–≥–∞">—É—Å–ª—É–≥–∞</option>
                    <option value="–º¬≤">–º¬≤</option>
                    <option value="–∫–æ–º–ø–ª.">–∫–æ–º–ø–ª.</option>
                    <option value="–º–µ—Å.">–º–µ—Å.</option>
                </select>
            </div>
        </td>
        <td>
            <input type="text" name="item_price[]" title="–¶–µ–Ω–∞ –∑–∞ –µ–¥–∏–Ω–∏—Ü—É" required>
        </td>
        <td>
            <input type="text" name="item_discount_percent[]" title="–°–∫–∏–¥–∫–∞ %" class="item-discount-percent" placeholder="%">
            <input type="hidden" name="item_discount[]" class="item-discount">
        </td>
        <td class="item-total">0,00</td>
        <td>
            <button type="button" class="btn-icon remove-item" title="–£–¥–∞–ª–∏—Ç—å –ø–æ–∑–∏—Ü–∏—é">
                ${trashIcon}
            </button>
        </td>
    `;
    
    // –î–æ–±–∞–≤–ª—è–µ–º –≤ —Ç–∞–±–ª–∏—Ü—É
    invoiceItems.appendChild(newRow);
    
    // –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–±—ã—Ç–∏–π
    const quantityInput = newRow.querySelector('input[name="item_quantity[]"]');
    const priceInput = newRow.querySelector('input[name="item_price[]"]');
    const discountPercentInput = newRow.querySelector('input[name="item_discount_percent[]"]');
    const discountInput = newRow.querySelector('input[name="item_discount[]"]');
    const removeButton = newRow.querySelector('.remove-item');
    
    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∫–Ω–æ–ø–∫–∏ —É–¥–∞–ª–µ–Ω–∏—è
    removeButton.addEventListener('click', function() {
        newRow.remove();
        updateTotals();
    });
    
    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è –ø–æ–ª–µ–π –≤–≤–æ–¥–∞
    [quantityInput, priceInput, discountPercentInput].forEach(input => {
        if (!input) return;
        
        input.addEventListener('focus', function() {
            if (input === discountPercentInput) {
                this.value = this.value.replace(/\s/g, '').replace(',', '.').replace('%', '');
            } else {
                this.value = this.value.replace(/\s/g, '').replace(',', '.');
            }
        });
        
        input.addEventListener('blur', function() {
            if (this.value) {
                if (input === discountPercentInput) {
                    let percent = parseFloat(this.value.replace(',', '.')) || 0;
                    // –û–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º –ø—Ä–æ—Ü–µ–Ω—Ç —Å–∫–∏–¥–∫–∏ –æ—Ç 0 –¥–æ 100
                    if (percent < 0) percent = 0;
                    if (percent > 100) percent = 100;
                    this.value = percent.toString().replace('.', ',');
                    
                    // –†–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ–º –∏ –æ–±–Ω–æ–≤–ª—è–µ–º —Å—É–º–º—É —Å–∫–∏–¥–∫–∏
                    const quantity = parseFloat(quantityInput.value.replace(',', '.')) || 0;
                    const price = parseFloat(priceInput.value.replace(',', '.')) || 0;
                    const itemTotal = quantity * price;
                    const discount = itemTotal * (percent / 100);
                    
                    if (discountInput) {
                        discountInput.value = discount.toFixed(2).replace('.', ',');
                    }
                } else {
                    this.value = parseFloat(this.value.replace(',', '.')).toFixed(2).replace('.', ',');
                }
                updateTotals();
            }
        });
        
        input.addEventListener('input', function() {
            updateTotals();
        });
    });
    
    // –û–±–Ω–æ–≤–ª—è–µ–º –∏—Ç–æ–≥–∏
    updateTotals();
}

/**
 * –ó–∞–ø–æ–ª–Ω–µ–Ω–∏–µ –±–∞–Ω–∫–æ–≤—Å–∫–∏—Ö —Ä–µ–∫–≤–∏–∑–∏—Ç–æ–≤ –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞ –¥–ª—è –≤—Ö–æ–¥—è—â–µ–≥–æ —Å—á–µ—Ç–∞
 */
function populateSupplierBankDetails(supplier) {
    if (!supplier) return;
    
    console.log('–ó–∞–ø–æ–ª–Ω—è–µ–º —Ä–µ–∫–≤–∏–∑–∏—Ç—ã –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞ –∏–∑ API:', supplier);
    
    // –ó–∞–ø–æ–ª–Ω–µ–Ω–∏–µ —Ä–µ–∫–≤–∏–∑–∏—Ç–æ–≤
    const nameDisplay = document.getElementById('supplier_name_display');
    const innDisplay = document.getElementById('supplier_inn_display');
    const bankDisplay = document.getElementById('supplier_bank_display');
    const bikDisplay = document.getElementById('supplier_bik_display');
    const accountDisplay = document.getElementById('supplier_account_display');
    const corrAccountDisplay = document.getElementById('supplier_corr_account_display');
    const paymentDetails = document.getElementById('payment_details');
    
    // –ù–∞—Ö–æ–¥–∏–º –ø–æ–ª—è –¥–ª—è –∫–æ–Ω—Ç–∞–∫—Ç–Ω–æ–≥–æ –ª–∏—Ü–∞ –∏ email
    const contactNameInput = document.getElementById('contact_name');
    const contactEmailInput = document.getElementById('contact_email');
    
    // –û–ø—Ä–µ–¥–µ–ª—è–µ–º –ò–ù–ù (–º–æ–∂–µ—Ç –±—ã—Ç—å –∫–∞–∫ inn, —Ç–∞–∫ –∏ tax_id –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –∏—Å—Ç–æ—á–Ω–∏–∫–∞ –¥–∞–Ω–Ω—ã—Ö)
    const inn = supplier.inn || supplier.tax_id || '';
    
    if (nameDisplay) nameDisplay.value = supplier.name || '';
    if (innDisplay) innDisplay.value = inn;
    if (bankDisplay) bankDisplay.value = supplier.bank_name || '';
    if (bikDisplay) bikDisplay.value = supplier.bank_bik || '';
    if (accountDisplay) accountDisplay.value = supplier.bank_account || '';
    if (corrAccountDisplay) corrAccountDisplay.value = supplier.bank_corr_account || '';
    
    // –ó–∞–ø–æ–ª–Ω—è–µ–º –∫–æ–Ω—Ç–∞–∫—Ç–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –∏—Å–∫–ª—é—á–∏—Ç–µ–ª—å–Ω–æ –∏–∑ API –¥–∞–Ω–Ω—ã—Ö
    if (contactNameInput) contactNameInput.value = supplier.contact_person || '';
    if (contactEmailInput) contactEmailInput.value = supplier.contact_email || '';
    
    // –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –ø–æ–ª–Ω—ã—Ö —Ä–µ–∫–≤–∏–∑–∏—Ç–æ–≤ –≤ —Å–∫—Ä—ã—Ç–æ–º –ø–æ–ª–µ
    if (paymentDetails) {
        const fullDetails = [
            `–ù–∞–∑–≤–∞–Ω–∏–µ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏: ${supplier.name || '-'}`,
            `–ò–ù–ù: ${inn || '-'}`,
            `–ë–∞–Ω–∫: ${supplier.bank_name || '-'}`,
            `–ë–ò–ö: ${supplier.bank_bik || '-'}`,
            `–†/—Å: ${supplier.bank_account || '-'}`,
            `–ö/—Å: ${supplier.bank_corr_account || '-'}`
        ].join('\n');
        
        paymentDetails.value = fullDetails;
    }
}

/**
 * –ó–∞–ø–æ–ª–Ω–µ–Ω–∏–µ –±–∞–Ω–∫–æ–≤—Å–∫–∏—Ö —Ä–µ–∫–≤–∏–∑–∏—Ç–æ–≤ –∫–æ–º–ø–∞–Ω–∏–∏ –¥–ª—è –∏—Å—Ö–æ–¥—è—â–µ–≥–æ —Å—á–µ—Ç–∞
 */
function populateCompanyBankDetails() {
    // –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –ø—Ä–æ—Ñ–∏–ª—è –∫–æ–º–ø–∞–Ω–∏–∏ –∏–∑ —Å–∫—Ä—ã—Ç–æ–≥–æ —ç–ª–µ–º–µ–Ω—Ç–∞, —Å–æ–∑–¥–∞–Ω–Ω–æ–≥–æ json_script
    const companyProfileDataElement = document.getElementById('company-profile-data');
    
    if (companyProfileDataElement) {
        try {
            const companyData = JSON.parse(companyProfileDataElement.textContent);
            
            // –ó–∞–ø–æ–ª–Ω—è–µ–º –ø–æ–ª—è –¥–∞–Ω–Ω—ã–º–∏ –∏–∑ –ø—Ä–æ—Ñ–∏–ª—è –∫–æ–º–ø–∞–Ω–∏–∏
            const nameInput = document.getElementById('company_name');
            const innInput = document.getElementById('company_inn');
            const bankInput = document.getElementById('company_bank');
            const bikInput = document.getElementById('company_bik');
            const accountInput = document.getElementById('company_account');
            const corrAccountInput = document.getElementById('company_corr_account');
            const paymentDetails = document.getElementById('payment_details');
            
            if (nameInput) nameInput.value = companyData.company_name || '';
            if (innInput) innInput.value = companyData.inn || '';
            if (bankInput) bankInput.value = companyData.bank_name || '';
            if (bikInput) bikInput.value = companyData.bank_bik || '';
            if (accountInput) accountInput.value = companyData.bank_account || '';
            if (corrAccountInput) corrAccountInput.value = companyData.bank_corr_account || '';
            
            // –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –ø–æ–ª–Ω—ã—Ö —Ä–µ–∫–≤–∏–∑–∏—Ç–æ–≤ –≤ —Å–∫—Ä—ã—Ç–æ–º –ø–æ–ª–µ
            if (paymentDetails) {
                const fullDetails = [
                    `–ù–∞–∑–≤–∞–Ω–∏–µ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏: ${companyData.company_name || '-'}`,
                    `–ò–ù–ù: ${companyData.inn || '-'}`,
                    `–ë–∞–Ω–∫: ${companyData.bank_name || '-'}`,
                    `–ë–ò–ö: ${companyData.bank_bik || '-'}`,
                    `–†/—Å: ${companyData.bank_account || '-'}`,
                    `–ö/—Å: ${companyData.bank_corr_account || '-'}`
                ].join('\n');
                
                paymentDetails.value = fullDetails;
            }
        } catch (e) {
            console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –¥–∞–Ω–Ω—ã—Ö –ø—Ä–æ—Ñ–∏–ª—è –∫–æ–º–ø–∞–Ω–∏–∏:', e);
            
            // –í —Å–ª—É—á–∞–µ –æ—à–∏–±–∫–∏ –∏—Å–ø–æ–ª—å–∑—É–µ–º –∑–∞–≥–ª—É—à–∫–∏
            const nameInput = document.getElementById('company_name');
            const innInput = document.getElementById('company_inn');
            const bankInput = document.getElementById('company_bank');
            const bikInput = document.getElementById('company_bik');
            const accountInput = document.getElementById('company_account');
            const corrAccountInput = document.getElementById('company_corr_account');
            const paymentDetails = document.getElementById('payment_details');
            
            if (nameInput) nameInput.value = '–ó–∞–ø–æ–ª–Ω–∏—Ç–µ –ø—Ä–æ—Ñ–∏–ª—å –∫–æ–º–ø–∞–Ω–∏–∏';
            if (innInput) innInput.value = '';
            if (bankInput) bankInput.value = '';
            if (bikInput) bikInput.value = '';
            if (accountInput) accountInput.value = '';
            if (corrAccountInput) corrAccountInput.value = '';
            
            if (paymentDetails) paymentDetails.value = '–ù–µ–æ–±—Ö–æ–¥–∏–º–æ –∑–∞–ø–æ–ª–Ω–∏—Ç—å –ø—Ä–æ—Ñ–∏–ª—å –∫–æ–º–ø–∞–Ω–∏–∏';
        }
    } else {
        // –ï—Å–ª–∏ —ç–ª–µ–º–µ–Ω—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω, –∏—Å–ø–æ–ª—å–∑—É–µ–º –∑–∞–≥–ª—É—à–∫–∏
        const nameInput = document.getElementById('company_name');
        const innInput = document.getElementById('company_inn');
        const bankInput = document.getElementById('company_bank');
        const bikInput = document.getElementById('company_bik');
        const accountInput = document.getElementById('company_account');
        const corrAccountInput = document.getElementById('company_corr_account');
        const paymentDetails = document.getElementById('payment_details');
        
        if (nameInput) nameInput.value = '–ó–∞–ø–æ–ª–Ω–∏—Ç–µ –ø—Ä–æ—Ñ–∏–ª—å –∫–æ–º–ø–∞–Ω–∏–∏';
        if (innInput) innInput.value = '';
        if (bankInput) bankInput.value = '';
        if (bikInput) bikInput.value = '';
        if (accountInput) accountInput.value = '';
        if (corrAccountInput) corrAccountInput.value = '';
        
        if (paymentDetails) paymentDetails.value = '–ù–µ–æ–±—Ö–æ–¥–∏–º–æ –∑–∞–ø–æ–ª–Ω–∏—Ç—å –ø—Ä–æ—Ñ–∏–ª—å –∫–æ–º–ø–∞–Ω–∏–∏';
    }
}

/**
 * –ó–∞–ø–æ–ª–Ω–µ–Ω–∏–µ –±–∞–Ω–∫–æ–≤—Å–∫–∏—Ö —Ä–µ–∫–≤–∏–∑–∏—Ç–æ–≤ –∫–ª–∏–µ–Ω—Ç–∞ –¥–ª—è –∏—Å—Ö–æ–¥—è—â–µ–≥–æ —Å—á–µ—Ç–∞
 */
function populateClientBankDetails(client) {
    if (!client) return;
    
    // –ù–∞—Ö–æ–¥–∏–º —ç–ª–µ–º–µ–Ω—Ç—ã –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Ä–µ–∫–≤–∏–∑–∏—Ç–æ–≤
    const nameDisplay = document.getElementById('client_name_display');
    const innDisplay = document.getElementById('client_inn_display');
    const bankDisplay = document.getElementById('client_bank_display');
    const bikDisplay = document.getElementById('client_bik_display');
    const accountDisplay = document.getElementById('client_account_display');
    const bankDetailsContainer = document.getElementById('client_bank_details');
    
    // –ù–∞—Ö–æ–¥–∏–º –ø–æ–ª—è –¥–ª—è –∫–æ–Ω—Ç–∞–∫—Ç–Ω–æ–≥–æ –ª–∏—Ü–∞ –∏ email
    const contactNameInput = document.getElementById('contact_name');
    const contactEmailInput = document.getElementById('contact_email');
    
    // –ï—Å–ª–∏ —Ç–∞–∫–∏—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –Ω–µ—Ç –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ, –≤—ã—Ö–æ–¥–∏–º
    if (!nameDisplay || !innDisplay) return;
    
    // –ó–∞–ø–æ–ª–Ω—è–µ–º –ø–æ–ª—è –¥–∞–Ω–Ω—ã–º–∏ –∫–ª–∏–µ–Ω—Ç–∞
    nameDisplay.value = client.name || '';
    innDisplay.value = client.inn || '';
    bankDisplay.value = client.bank_name || '';
    bikDisplay.value = client.bank_bik || '';
    accountDisplay.value = client.bank_account || '';
    
    // –ó–∞–ø–æ–ª–Ω—è–µ–º –∫–æ–Ω—Ç–∞–∫—Ç–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é
    if (contactNameInput) contactNameInput.value = client.contact_person || '';
    if (contactEmailInput) contactEmailInput.value = client.contact_email || '';
    
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –±–ª–æ–∫ —Å —Ä–µ–∫–≤–∏–∑–∏—Ç–∞–º–∏
    if (bankDetailsContainer) bankDetailsContainer.style.display = 'block';
}

/**
 * –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–µ–¥–∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è –ø–æ–ª–µ–π —Ñ–æ—Ä–º—ã –ø—Ä–∏ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏
 */
function prepopulateFormForEditing() {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–∞—Ö–æ–¥–∏–º—Å—è –ª–∏ –≤ —Ä–µ–∂–∏–º–µ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
    const invoiceForm = document.querySelector('.invoice-form');
    if (!invoiceForm || !invoiceForm.hasAttribute('data-is-edit')) {
        return;
    }
    
    console.log('–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Ä–µ–∂–∏–º–∞ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è...');
    
    try {
        // –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ —Å—á–µ—Ç–∞ –∏–∑ JSON-—Å–∫—Ä–∏–ø—Ç–∞
        const invoiceDataElement = document.getElementById('invoice-data');
        if (!invoiceDataElement) {
            console.error('–≠–ª–µ–º–µ–Ω—Ç —Å ID "invoice-data" –Ω–µ –Ω–∞–π–¥–µ–Ω');
            return;
        }
        
        const invoiceDataText = invoiceDataElement.textContent.trim();
        console.log('JSON –¥–∞–Ω–Ω—ã–µ –∏–∑ —Å–∫—Ä–∏–ø—Ç–∞:', invoiceDataText);
        
        const invoiceData = JSON.parse(invoiceDataText);
        console.log('–ó–∞–≥—Ä—É–∂–µ–Ω—ã –¥–∞–Ω–Ω—ã–µ —Å—á–µ—Ç–∞ –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:', invoiceData);
        
        // –ó–∞–ø–æ–ª–Ω—è–µ–º –æ—Å–Ω–æ–≤–Ω—ã–µ –ø–æ–ª—è —Ñ–æ—Ä–º—ã
        const invoiceNumber = document.getElementById('invoice_number');
        const invoiceDate = document.getElementById('invoice_date');
        const dueDate = document.getElementById('due_date');
        
        if (invoiceNumber) invoiceNumber.value = invoiceData.number || '';
        if (invoiceDate) invoiceDate.value = invoiceData.issue_date || '';
        if (dueDate) dueDate.value = invoiceData.due_date || '';
        
        // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å—Ç–∞—Ç—É—Å
        const statusSelect = document.getElementById('status');
        if (statusSelect && invoiceData.status) {
            const option = statusSelect.querySelector(`option[value="${invoiceData.status}"]`);
            if (option) {
                option.selected = true;
            }
        }
        
        // –ó–∞–ø–æ–ª–Ω—è–µ–º –∫–æ–Ω—Ç–∞–∫—Ç–Ω–æ–µ –ª–∏—Ü–æ –∏ email
        const contactNameInput = document.getElementById('contact_name');
        if (contactNameInput) {
            if (invoiceData.client_contact_person) {
                contactNameInput.value = invoiceData.client_contact_person;
            } else if (invoiceData.contact_person) {
                contactNameInput.value = invoiceData.contact_person;
            }
        }
        
        const contactEmailInput = document.getElementById('contact_email');
        if (contactEmailInput) {
            if (invoiceData.client_email) {
                contactEmailInput.value = invoiceData.client_email;
            } else if (invoiceData.contact_email) {
                contactEmailInput.value = invoiceData.contact_email;
            }
        }
        
        // –ó–∞–ø–æ–ª–Ω—è–µ–º –ø—Ä–∏–º–µ—á–∞–Ω–∏—è –∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –æ–ø–ª–∞—Ç–µ
        const notesElement = document.getElementById('notes');
        if (notesElement) {
            notesElement.value = invoiceData.notes || '';
        }
        
        const paymentDetailsElement = document.getElementById('payment_details');
        if (paymentDetailsElement) {
            paymentDetailsElement.value = invoiceData.payment_info || '';
        }
        
        // –ó–∞–ø–æ–ª–Ω—è–µ–º —Ä–µ–∫–≤–∏–∑–∏—Ç—ã –¥–ª—è –æ–ø–ª–∞—Ç—ã (–¥–ª—è –∏—Å—Ö–æ–¥—è—â–µ–≥–æ —Å—á–µ—Ç–∞)
        const companyNameInput = document.getElementById('company_name');
        if (companyNameInput) {
            companyNameInput.value = invoiceData.supplier_name || '';
        }
        
        const companyInnInput = document.getElementById('company_inn');
        if (companyInnInput) {
            companyInnInput.value = invoiceData.supplier_inn || '';
        }
        
        const companyBankInput = document.getElementById('company_bank');
        if (companyBankInput) {
            companyBankInput.value = invoiceData.supplier_bank || '';
        }
        
        const companyBikInput = document.getElementById('company_bik');
        if (companyBikInput) {
            companyBikInput.value = invoiceData.supplier_bank_bik || '';
        }
        
        const companyAccountInput = document.getElementById('company_account');
        if (companyAccountInput) {
            companyAccountInput.value = invoiceData.supplier_bank_account || '';
        }
        
        const companyCorrAccountInput = document.getElementById('company_corr_account');
        if (companyCorrAccountInput) {
            companyCorrAccountInput.value = invoiceData.supplier_bank_corr_account || '';
        }
        
        // –ó–∞–ø–æ–ª–Ω—è–µ–º —Ä–µ–∫–≤–∏–∑–∏—Ç—ã –¥–ª—è –æ–ø–ª–∞—Ç—ã (–¥–ª—è –≤—Ö–æ–¥—è—â–µ–≥–æ —Å—á–µ—Ç–∞)
        const supplierNameDisplay = document.getElementById('supplier_name_display');
        if (supplierNameDisplay) {
            supplierNameDisplay.value = invoiceData.supplier_name || '';
        }
        
        const supplierInnDisplay = document.getElementById('supplier_inn_display');
        if (supplierInnDisplay) {
            supplierInnDisplay.value = invoiceData.supplier_inn || '';
        }
        
        const supplierBankDisplay = document.getElementById('supplier_bank_display');
        if (supplierBankDisplay) {
            supplierBankDisplay.value = invoiceData.supplier_bank || '';
        }
        
        const supplierBikDisplay = document.getElementById('supplier_bik_display');
        if (supplierBikDisplay) {
            supplierBikDisplay.value = invoiceData.supplier_bank_bik || '';
        }
        
        const supplierAccountDisplay = document.getElementById('supplier_account_display');
        if (supplierAccountDisplay) {
            supplierAccountDisplay.value = invoiceData.supplier_bank_account || '';
        }
        
        const supplierCorrAccountDisplay = document.getElementById('supplier_corr_account_display');
        if (supplierCorrAccountDisplay) {
            supplierCorrAccountDisplay.value = invoiceData.supplier_bank_corr_account || '';
        }
        
        // –ï—Å–ª–∏ –µ—Å—Ç—å —Å–∫–∏–¥–∫–∞, –∑–∞–ø–æ–ª–Ω—è–µ–º –ø–æ–ª–µ —Å–∫–∏–¥–∫–∏
        const discountInput = document.getElementById('discount');
        if (discountInput && typeof invoiceData.discount !== 'undefined') {
            // –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º —Å–∫–∏–¥–∫—É —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º –∑–∞–ø—è—Ç–æ–π –≤ –∫–∞—á–µ—Å—Ç–≤–µ –¥–µ—Å—è—Ç–∏—á–Ω–æ–≥–æ —Ä–∞–∑–¥–µ–ª–∏—Ç–µ–ª—è
            discountInput.value = (parseFloat(invoiceData.discount) || 0).toString().replace('.', ',');
        }
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –ø–æ–∑–∏—Ü–∏–∏ —Å—á–µ—Ç–∞
        if (invoiceData.items && Array.isArray(invoiceData.items) && invoiceData.items.length > 0) {
            console.log('–ù–∞–π–¥–µ–Ω–æ –ø–æ–∑–∏—Ü–∏–π:', invoiceData.items.length);
            console.log('–î–∞–Ω–Ω—ã–µ –ø–æ–∑–∏—Ü–∏–π:', invoiceData.items);
            
            // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ —Å—Ç—Ä–æ–∫–∏ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ
            const existingRows = document.querySelectorAll('.invoice-item');
            console.log('–°—É—â–µ—Å—Ç–≤—É—é—â–∏–µ —Å—Ç—Ä–æ–∫–∏ –≤ —Ç–∞–±–ª–∏—Ü–µ:', existingRows.length);
            
            // –ï—Å–ª–∏ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ —É–∂–µ –µ—Å—Ç—å —Å—Ç—Ä–æ–∫–∏, –º—ã –∏—Ö –∏—Å–ø–æ–ª—å–∑—É–µ–º
            // –ï—Å–ª–∏ —Å—Ç—Ä–æ–∫ –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ, –º—ã –¥–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤—ã–µ
            
            // –ó–∞–ø–æ–ª–Ω—è–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ —Å—Ç—Ä–æ–∫–∏
            for (let i = 0; i < existingRows.length && i < invoiceData.items.length; i++) {
                const row = existingRows[i];
                const item = invoiceData.items[i];
                
                console.log(`–ó–∞–ø–æ–ª–Ω—è–µ–º —Å—Ç—Ä–æ–∫—É ${i}:`, item);
                
                const nameInput = row.querySelector('input[name="item_name[]"]');
                const quantityInput = row.querySelector('input[name="item_quantity[]"]');
                const priceInput = row.querySelector('input[name="item_price[]"]');
                const totalCell = row.querySelector('.item-total');
                
                if (nameInput) {
                    nameInput.value = item.description || '';
                    console.log(`–ù–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ –¥–ª—è —Å—Ç—Ä–æ–∫–∏ ${i}:`, nameInput.value);
                }
                
                if (quantityInput) {
                    const quantity = parseFloat(String(item.quantity).replace(',', '.')) || 1;
                    quantityInput.value = quantity.toString().replace('.', ',');
                    console.log(`–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–ª—è —Å—Ç—Ä–æ–∫–∏ ${i}:`, quantityInput.value);
                }
                
                if (priceInput) {
                    const price = parseFloat(String(item.price).replace(',', '.')) || 0;
                    priceInput.value = price.toString().replace('.', ',');
                    console.log(`–¶–µ–Ω–∞ –¥–ª—è —Å—Ç—Ä–æ–∫–∏ ${i}:`, priceInput.value);
                }
                
                if (totalCell) {
                    const amount = parseFloat(String(item.amount).replace(',', '.')) || 0;
                    totalCell.textContent = amount.toFixed(2).replace('.', ',');
                }
            }
            
            // –ï—Å–ª–∏ –ø–æ–∑–∏—Ü–∏–π –±–æ–ª—å—à–µ, —á–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö —Å—Ç—Ä–æ–∫, –¥–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤—ã–µ
            if (invoiceData.items.length > existingRows.length) {
                console.log(`–î–æ–±–∞–≤–ª—è–µ–º ${invoiceData.items.length - existingRows.length} –Ω–æ–≤—ã—Ö —Å—Ç—Ä–æ–∫`);
                
                for (let i = existingRows.length; i < invoiceData.items.length; i++) {
                    const item = invoiceData.items[i];
                    
                    // –î–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤—É—é —Å—Ç—Ä–æ–∫—É
                    addNewItemRow();
                    
                    // –ü–æ–ª—É—á–∞–µ–º –Ω–æ–≤—É—é —Å—Ç—Ä–æ–∫—É (–ø–æ—Å–ª–µ–¥–Ω—é—é –¥–æ–±–∞–≤–ª–µ–Ω–Ω—É—é)
                    const newRows = document.querySelectorAll('.invoice-item');
                    const newRow = newRows[newRows.length - 1];
                    
                    // –ó–∞–ø–æ–ª–Ω—è–µ–º –Ω–æ–≤—É—é —Å—Ç—Ä–æ–∫—É
                    const nameInput = newRow.querySelector('input[name="item_name[]"]');
                    const quantityInput = newRow.querySelector('input[name="item_quantity[]"]');
                    const priceInput = newRow.querySelector('input[name="item_price[]"]');
                    const totalCell = newRow.querySelector('.item-total');
                    
                    if (nameInput) nameInput.value = item.description || '';
                    
                    if (quantityInput) {
                        const quantity = parseFloat(String(item.quantity).replace(',', '.')) || 1;
                        quantityInput.value = quantity.toString().replace('.', ',');
                    }
                    
                    if (priceInput) {
                        const price = parseFloat(String(item.price).replace(',', '.')) || 0;
                        priceInput.value = price.toString().replace('.', ',');
                    }
                    
                    if (totalCell) {
                        const amount = parseFloat(String(item.amount).replace(',', '.')) || 0;
                        totalCell.textContent = amount.toFixed(2).replace('.', ',');
                    }
                }
            }
        } else {
            console.log('–ù–µ—Ç –ø–æ–∑–∏—Ü–∏–π –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ –∏–ª–∏ –º–∞—Å—Å–∏–≤ –ø–æ–∑–∏—Ü–∏–π –ø—É—Å—Ç');
        }
        
        // –û–±–Ω–æ–≤–ª—è–µ–º –∏—Ç–æ–≥–∏
        updateTotals();
        
        console.log('–§–æ—Ä–º–∞ —É—Å–ø–µ—à–Ω–æ –∑–∞–ø–æ–ª–Ω–µ–Ω–∞ –¥–∞–Ω–Ω—ã–º–∏ –∏–∑ —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–≥–æ —Å—á–µ—Ç–∞');
    } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø–æ–ª–Ω–µ–Ω–∏–∏ —Ñ–æ—Ä–º—ã:', error);
        console.error('–°—Ç–µ–∫ –≤—ã–∑–æ–≤–æ–≤:', error.stack);
    }
}

// –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç —Ç–µ–∫—É—â—É—é –¥–∞—Ç—É –¥–ª—è –ø–æ–ª–µ–π —Å –¥–∞—Ç–æ–π
function setDefaultDates() {
    const today = new Date();
    const formattedDate = today.toISOString().split('T')[0]; // YYYY-MM-DD
    
    // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ç–µ–∫—É—â—É—é –¥–∞—Ç—É –¥–ª—è –ø–æ–ª—è –¥–∞—Ç—ã —Å—á–µ—Ç–∞, –µ—Å–ª–∏ –æ–Ω–æ –ø—É—Å—Ç–æ–µ
    const invoiceDateInput = document.getElementById('invoice_date');
    if (invoiceDateInput && !invoiceDateInput.value) {
        invoiceDateInput.value = formattedDate;
    }
    
    // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å—Ä–æ–∫ –æ–ø–ª–∞—Ç—ã —á–µ—Ä–µ–∑ 15 –¥–Ω–µ–π, –µ—Å–ª–∏ –ø–æ–ª–µ –ø—É—Å—Ç–æ–µ
    const dueDateInput = document.getElementById('due_date');
    if (dueDateInput && !dueDateInput.value) {
        const dueDate = new Date(today);
        dueDate.setDate(today.getDate() + 15);
        dueDateInput.value = dueDate.toISOString().split('T')[0];
    }
}

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∫–∞—Å—Ç–æ–º–Ω—ã—Ö —Å–µ–ª–µ–∫—Ç–æ—Ä–æ–≤ (–∫–ª–∏–µ–Ω—Ç/–ø–æ—Å—Ç–∞–≤—â–∏–∫)
function initializeEntitySelectors() {
    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–µ–ª–µ–∫—Ç–æ—Ä–∞ –∫–ª–∏–µ–Ω—Ç–∞ (–¥–ª—è –∏—Å—Ö–æ–¥—è—â–µ–≥–æ —Å—á–µ—Ç–∞)
    initializeEntitySelector('client');
    
    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–µ–ª–µ–∫—Ç–æ—Ä–∞ –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞ (–¥–ª—è –≤—Ö–æ–¥—è—â–µ–≥–æ —Å—á–µ—Ç–∞)
    initializeEntitySelector('supplier');
}

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ —Å–µ–ª–µ–∫—Ç–æ—Ä–∞ (–∫–ª–∏–µ–Ω—Ç –∏–ª–∏ –ø–æ—Å—Ç–∞–≤—â–∏–∫)
function initializeEntitySelector(type) {
    const entitySelect = document.getElementById(`${type}-select`);
    const entityDropdown = document.getElementById(`${type}-dropdown`);
    const entitySearch = document.getElementById(`${type}-search`);
    const idInput = document.getElementById(`${type}_id`);
    const contactNameInput = document.getElementById('contact_name');
    const contactEmailInput = document.getElementById('contact_email');
    const addButton = document.getElementById(`add-${type}`);
    const dynamicListId = `dynamic-${type}s-list`;
    const listContainer = document.getElementById(dynamicListId);
    
    if (!entitySelect || !entityDropdown || !listContainer) {
        return; // –ï—Å–ª–∏ —ç–ª–µ–º–µ–Ω—Ç—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã, –ø—Ä–µ—Ä—ã–≤–∞–µ–º –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—é
    }
    
    // –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ JSON-—Å–∫—Ä–∏–ø—Ç–∞
    const dataScriptId = `${type}s-data`;
    const dataScript = document.getElementById(dataScriptId);
    let entities = [];
    
    if (dataScript) {
        try {
            entities = JSON.parse(dataScript.textContent);
        } catch (e) {
            console.error(`–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–∞—Ä—Å–∏–Ω–≥–µ –¥–∞–Ω–Ω—ã—Ö ${type}:`, e);
        }
    }
    
    // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–∫—Ä—ã—Ç–∏—è/–∑–∞–∫—Ä—ã—Ç–∏—è –≤—ã–ø–∞–¥–∞—é—â–µ–≥–æ —Å–ø–∏—Å–∫–∞
    function toggleDropdown() {
        entitySelect.classList.toggle('active');
        entityDropdown.classList.toggle('show');
        
        if (entityDropdown.classList.contains('show')) {
            entitySearch.focus();
        }
    }
    
    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–ª–∏–∫–∞ –Ω–∞ —Å–µ–ª–µ–∫—Ç
    entitySelect.addEventListener('click', function(e) {
        e.stopPropagation();
        toggleDropdown();
    });
    
    // –ó–∞–∫—Ä—ã—Ç–∏–µ –≤—ã–ø–∞–¥–∞—é—â–µ–≥–æ —Å–ø–∏—Å–∫–∞ –ø—Ä–∏ –∫–ª–∏–∫–µ –≤–Ω–µ –µ–≥–æ
    document.addEventListener('click', function(e) {
        if (!entitySelect.contains(e.target) && !entityDropdown.contains(e.target)) {
            entitySelect.classList.remove('active');
            entityDropdown.classList.remove('show');
        }
    });
    
    // –ó–∞–ø–æ–ª–Ω—è–µ–º —Å–ø–∏—Å–æ–∫ —ç–ª–µ–º–µ–Ω—Ç–∞–º–∏
    if (listContainer && entities.length > 0) {
        entities.forEach(entity => {
            const element = document.createElement('div');
            element.className = 'entity-item';
            element.setAttribute('data-id', entity.id);
            element.setAttribute('data-name', entity.name);
            element.setAttribute('data-contact', entity.contact_person || '');
            element.setAttribute('data-email', entity.email || '');
            element.setAttribute('data-inn', entity.tax_id || '');
            element.setAttribute('data-bank', entity.bank_name || '');
            element.setAttribute('data-bik', entity.bank_bik || '');
            element.setAttribute('data-account', entity.bank_account || '');
            element.setAttribute('data-corr-account', entity.bank_corr_account || '');
            
            element.innerHTML = `
                <div class="entity-item-name">${entity.name}</div>
                <div class="entity-item-info">
                    <span class="entity-item-inn">–ò–ù–ù: ${entity.tax_id || '–ù–µ —É–∫–∞–∑–∞–Ω'}</span>
                    ${entity.phone ? `<span class="entity-item-phone">–¢–µ–ª: ${entity.phone}</span>` : ''}
                </div>
            `;
            
            // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–ª–∏–∫–∞ –Ω–∞ —ç–ª–µ–º–µ–Ω—Ç —Å–ø–∏—Å–∫–∞
            element.addEventListener('click', function() {
                selectEntity(this, type);
            });
            
            listContainer.appendChild(element);
        });
    } else {
        // –ï—Å–ª–∏ —Å–ø–∏—Å–æ–∫ –ø—É—Å—Ç
        const noResults = document.createElement('div');
        noResults.className = 'no-results';
        noResults.textContent = `–°–ø–∏—Å–æ–∫ ${type === 'client' ? '–∫–ª–∏–µ–Ω—Ç–æ–≤' : '–ø–æ—Å—Ç–∞–≤—â–∏–∫–æ–≤'} –ø—É—Å—Ç`;
        listContainer.appendChild(noResults);
    }
    
    // –§—É–Ω–∫—Ü–∏—è –≤—ã–±–æ—Ä–∞ —ç–ª–µ–º–µ–Ω—Ç–∞ –∏–∑ —Å–ø–∏—Å–∫–∞
    function selectEntity(item, entityType) {
        const id = item.getAttribute('data-id');
        const name = item.getAttribute('data-name');
        const contact = item.getAttribute('data-contact') || '';
        const email = item.getAttribute('data-email') || '';
        const inn = item.getAttribute('data-inn') || '';
        const bank = item.getAttribute('data-bank') || '';
        const bik = item.getAttribute('data-bik') || '';
        const account = item.getAttribute('data-account') || '';
        const corrAccount = item.getAttribute('data-corr-account') || '';
        
        // –û–±–Ω–æ–≤–ª—è–µ–º –≤—ã–±—Ä–∞–Ω–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –≤ —Å–µ–ª–µ–∫—Ç–æ—Ä–µ
        entitySelect.querySelector('span').textContent = name;
        idInput.value = id;
        
        // –ó–∞–ø–æ–ª–Ω—è–µ–º –∫–æ–Ω—Ç–∞–∫—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
        contactNameInput.value = contact;
        contactEmailInput.value = email;
        
        // –ó–∞–ø–æ–ª–Ω—è–µ–º –±–∞–Ω–∫–æ–≤—Å–∫–∏–µ —Ä–µ–∫–≤–∏–∑–∏—Ç—ã, –µ—Å–ª–∏ –¥–æ—Å—Ç—É–ø–Ω—ã
        const bankDetailsContainer = document.getElementById(`${entityType}_bank_details`);
        if (bankDetailsContainer) {
            document.getElementById(`${entityType}_name_display`).value = name;
            document.getElementById(`${entityType}_inn_display`).value = inn;
            document.getElementById(`${entityType}_bank_display`).value = bank;
            document.getElementById(`${entityType}_bik_display`).value = bik;
            document.getElementById(`${entityType}_account_display`).value = account;
            
            const corrAccountDisplay = document.getElementById(`${entityType}_corr_account_display`);
            if (corrAccountDisplay) {
                corrAccountDisplay.value = corrAccount;
            }
            
            // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –±–ª–æ–∫ —Å —Ä–µ–∫–≤–∏–∑–∏—Ç–∞–º–∏
            bankDetailsContainer.style.display = 'block';
        }
        
        // –°–∫—Ä—ã–≤–∞–µ–º –≤—ã–ø–∞–¥–∞—é—â–∏–π —Å–ø–∏—Å–æ–∫
        entitySelect.classList.remove('active');
        entityDropdown.classList.remove('show');
    }
    
    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –ø–æ–∏—Å–∫–∞
    if (entitySearch) {
        entitySearch.addEventListener('input', function() {
            const searchValue = this.value.toLowerCase();
            const items = listContainer.querySelectorAll('.entity-item');
            let hasResults = false;
            
            items.forEach(item => {
                const name = item.querySelector('.entity-item-name').textContent.toLowerCase();
                const info = item.querySelector('.entity-item-info').textContent.toLowerCase();
                
                if (name.includes(searchValue) || info.includes(searchValue)) {
                    item.style.display = 'block';
                    hasResults = true;
                } else {
                    item.style.display = 'none';
                }
            });
            
            // –ü–æ–∫–∞–∑–∞—Ç—å/—Å–∫—Ä—ã—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—Ç—Å—É—Ç—Å—Ç–≤–∏–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
            let noResults = listContainer.querySelector('.no-results');
            if (!hasResults) {
                if (!noResults) {
                    noResults = document.createElement('div');
                    noResults.className = 'no-results';
                    noResults.textContent = `–ù–µ—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –¥–ª—è "${searchValue}"`;
                    listContainer.appendChild(noResults);
                } else {
                    noResults.textContent = `–ù–µ—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –¥–ª—è "${searchValue}"`;
                    noResults.style.display = 'block';
                }
            } else if (noResults) {
                noResults.style.display = 'none';
            }
        });
    }
    
    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –Ω–æ–≤–æ–≥–æ —ç–ª–µ–º–µ–Ω—Ç–∞
    if (addButton) {
        addButton.addEventListener('click', function() {
            window.location.href = type === 'client' 
                ? '/clients/create/' 
                : '/suppliers/create/';
        });
    }
    
    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ —ç–ª–µ–º–µ–Ω—Ç–∞ –ø–æ ID –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
    const isEditMode = document.querySelector('.invoice-form').getAttribute('data-is-edit') === 'true';
    if (isEditMode && idInput.value) {
        const items = listContainer.querySelectorAll('.entity-item');
        for (let i = 0; i < items.length; i++) {
            if (items[i].getAttribute('data-id') === idInput.value) {
                selectEntity(items[i], type);
                break;
            }
        }
    }
}

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Ç–∞–±–ª–∏—Ü—ã —Ç–æ–≤–∞—Ä–æ–≤/—É—Å–ª—É–≥
function initializeInvoiceItems() {
    const itemsContainer = document.getElementById('invoice-items');
    const addItemButton = document.getElementById('add-item');
    const discountInput = document.getElementById('discount');
    
    if (!itemsContainer || !addItemButton) {
        console.error('–ù–µ –Ω–∞–π–¥–µ–Ω—ã –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã –¥–ª—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ —Ç–æ–≤–∞—Ä–æ–≤');
        return;
    }
    
    // –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö —Å—Ç—Ä–æ–∫
    updateExistingItemsHandlers();
    
    // –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∫–Ω–æ–ø–∫–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –Ω–æ–≤–æ–π –ø–æ–∑–∏—Ü–∏–∏
    addItemButton.addEventListener('click', addInvoiceItem);
    
    // –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è –ø–æ–ª—è –æ–±—â–µ–π —Å–∫–∏–¥–∫–∏
    if (discountInput) {
        discountInput.addEventListener('input', function() {
            calculateTotals();
        });
        
        discountInput.addEventListener('focus', function() {
            this.value = this.value.replace(/\s/g, '').replace(',', '.');
        });
        
        discountInput.addEventListener('blur', function() {
            if (this.value) {
                this.value = parseFloat(this.value.replace(',', '.')).toFixed(2).replace('.', ',');
                calculateTotals();
            }
        });
    }
    
    // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –Ω–æ–≤–æ–π –ø–æ–∑–∏—Ü–∏–∏
    function addInvoiceItem() {
        const newRow = document.createElement('tr');
        newRow.className = 'invoice-item';
        
        // –ò—Å–ø–æ–ª—å–∑—É–µ–º SVG –∏–∫–æ–Ω–∫—É –º—É—Å–æ—Ä–Ω–æ–≥–æ –±–∞–∫–∞
        const trashIcon = window.svgIcons && typeof window.svgIcons.getHtml === 'function' 
            ? window.svgIcons.getHtml('icon-trash')
            : '<i class="fas fa-trash"></i>';
        
        newRow.innerHTML = `
            <td class="item-name-cell">
                <input type="text" name="item_name[]" title="–ù–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞/—É—Å–ª—É–≥–∏" required>
            </td>
            <td class="item-quantity-cell">
                <div class="quantity-unit-wrapper">
                    <input type="text" name="item_quantity[]" title="–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ" required>
                    <select name="item_unit[]" title="–ï–¥–∏–Ω–∏—Ü–∞ –∏–∑–º–µ—Ä–µ–Ω–∏—è" class="item-unit">
                        <option value="—à—Ç.">—à—Ç.</option>
                        <option value="—á–∞—Å.">—á–∞—Å.</option>
                        <option value="—É—Å–ª—É–≥–∞">—É—Å–ª—É–≥–∞</option>
                        <option value="–º¬≤">–º¬≤</option>
                        <option value="–∫–æ–º–ø–ª.">–∫–æ–º–ø–ª.</option>
                        <option value="–º–µ—Å.">–º–µ—Å.</option>
                    </select>
                </div>
            </td>
            <td>
                <input type="text" name="item_price[]" title="–¶–µ–Ω–∞ –∑–∞ –µ–¥–∏–Ω–∏—Ü—É" required>
            </td>
            <td>
                <input type="text" name="item_discount[]" title="–°–∫–∏–¥–∫–∞" class="item-discount">
            </td>
            <td class="item-total">0,00</td>
            <td>
                <button type="button" class="btn-icon remove-item" title="–£–¥–∞–ª–∏—Ç—å –ø–æ–∑–∏—Ü–∏—é">
                    ${trashIcon}
                </button>
            </td>
        `;
        
        itemsContainer.appendChild(newRow);
        
        // –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è –Ω–æ–≤–æ–π —Å—Ç—Ä–æ–∫–∏
        addItemHandlers(newRow);
        
        // –§–æ–∫—É—Å–∏—Ä—É–µ–º—Å—è –Ω–∞ –ø–æ–ª–µ –Ω–∞–∑–≤–∞–Ω–∏—è
        const nameInput = newRow.querySelector('input[name="item_name[]"]');
        nameInput.focus();
    }
    
    // –î–æ–±–∞–≤–ª—è–µ—Ç –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–±—ã—Ç–∏–π –¥–ª—è —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö –ø–æ–∑–∏—Ü–∏–π
    function updateExistingItemsHandlers() {
        const rows = itemsContainer.querySelectorAll('.invoice-item');
        
        rows.forEach(row => {
            addItemHandlers(row);
        });
    }
    
    // –î–æ–±–∞–≤–ª—è–µ—Ç –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–±—ã—Ç–∏–π –¥–ª—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–π —Å—Ç—Ä–æ–∫–∏
    function addItemHandlers(row) {
        // –ö–Ω–æ–ø–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è
        const removeButton = row.querySelector('.remove-item');
        removeButton.addEventListener('click', function() {
            if (itemsContainer.querySelectorAll('.invoice-item').length > 1) {
                row.remove();
                calculateTotals();
            } else {
                alert('–î–æ–ª–∂–Ω–∞ –±—ã—Ç—å —Ö–æ—Ç—è –±—ã –æ–¥–Ω–∞ –ø–æ–∑–∏—Ü–∏—è –≤ —Å—á–µ—Ç–µ');
            }
        });
        
        // –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –≤–≤–æ–¥–∞ –¥–ª—è –ø–æ–ª–µ–π –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞, —Ü–µ–Ω—ã –∏ —Å–∫–∏–¥–∫–∏
        const quantityInput = row.querySelector('input[name="item_quantity[]"]');
        const priceInput = row.querySelector('input[name="item_price[]"]');
        const discountPercentInput = row.querySelector('input[name="item_discount_percent[]"]');
        const discountInput = row.querySelector('input[name="item_discount[]"]');
        const totalCell = row.querySelector('.item-total');
        
        // –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–∏ —Ñ–æ–∫—É—Å–µ –∏ –ø–æ—Ç–µ—Ä–µ —Ñ–æ–∫—É—Å–∞
        quantityInput.addEventListener('focus', function() {
            this.value = this.value.replace(/\s/g, '').replace(',', '.');
        });
        
        quantityInput.addEventListener('blur', function() {
            if (this.value) {
                this.value = parseFloat(this.value.replace(',', '.')).toFixed(2).replace('.', ',');
                calculateRowTotal(row);
            }
        });
        
        priceInput.addEventListener('focus', function() {
            this.value = this.value.replace(/\s/g, '').replace(',', '.');
        });
        
        priceInput.addEventListener('blur', function() {
            if (this.value) {
                this.value = parseFloat(this.value.replace(',', '.')).toFixed(2).replace('.', ',');
                calculateRowTotal(row);
            }
        });
        
        if (discountPercentInput) {
            discountPercentInput.addEventListener('focus', function() {
                this.value = this.value.replace(/\s/g, '').replace(',', '.').replace('%', '');
            });
            
            discountPercentInput.addEventListener('blur', function() {
                if (this.value) {
                    let percent = parseFloat(this.value.replace(',', '.')) || 0;
                    // –û–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º –ø—Ä–æ—Ü–µ–Ω—Ç —Å–∫–∏–¥–∫–∏ –æ—Ç 0 –¥–æ 100
                    if (percent < 0) percent = 0;
                    if (percent > 100) percent = 100;
                    this.value = percent.toString().replace('.', ',');
                    calculateRowTotal(row);
                }
            });
            
            discountPercentInput.addEventListener('input', function() {
                calculateRowTotal(row);
            });
        }
        
        // –ü–µ—Ä–µ—Å—á–µ—Ç —Å—É–º–º—ã –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –∏–ª–∏ —Ü–µ–Ω—ã
        quantityInput.addEventListener('input', function() {
            calculateRowTotal(row);
        });
        
        priceInput.addEventListener('input', function() {
            calculateRowTotal(row);
        });
    }
    
    // –†–∞—Å—á–µ—Ç —Å—É–º–º—ã –¥–ª—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–π —Å—Ç—Ä–æ–∫–∏
    function calculateRowTotal(row) {
        const quantityInput = row.querySelector('input[name="item_quantity[]"]');
        const priceInput = row.querySelector('input[name="item_price[]"]');
        const discountPercentInput = row.querySelector('input[name="item_discount_percent[]"]');
        const discountInput = row.querySelector('input[name="item_discount[]"]');
        const totalCell = row.querySelector('.item-total');
        
        // –¢–æ–ª—å–∫–æ –µ—Å–ª–∏ –ø–æ–ª—è –Ω–µ –ø—É—Å—Ç—ã–µ, –ø—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –∑–Ω–∞—á–µ–Ω–∏—è
        const quantity = quantityInput.value ? parseFloat(quantityInput.value.replace(',', '.')) || 0 : 0;
        const price = priceInput.value ? parseFloat(priceInput.value.replace(',', '.')) || 0 : 0;
        const itemTotal = quantity * price;
        
        // –ï—Å–ª–∏ —É–∫–∞–∑–∞–Ω –ø—Ä–æ—Ü–µ–Ω—Ç —Å–∫–∏–¥–∫–∏, —Ä–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ–º —Å—É–º–º—É —Å–∫–∏–¥–∫–∏
        let discount = 0;
        if (discountPercentInput && discountPercentInput.value) {
            const discountPercent = parseFloat(discountPercentInput.value.replace(',', '.')) || 0;
            if (discountPercent > 100) {
                discountPercent = 100;
                discountPercentInput.value = "100";
            }
            discount = itemTotal * (discountPercent / 100);
            
            // –û–±–Ω–æ–≤–ª—è–µ–º —Å–∫—Ä—ã—Ç–æ–µ –ø–æ–ª–µ —Å —Å—É–º–º–æ–π —Å–∫–∏–¥–∫–∏
            if (discountInput) {
                discountInput.value = discount.toFixed(2).replace('.', ',');
            }
        }
        
        // –í—ã—á–∏—Å–ª—è–µ–º —Å—É–º–º—É —Å —É—á–µ—Ç–æ–º —Å–∫–∏–¥–∫–∏
        const total = itemTotal - discount;
        
        totalCell.textContent = total.toFixed(2).replace('.', ',');
        
        // –ü–µ—Ä–µ—Å—á–∏—Ç—ã–≤–∞–µ–º –æ–±—â–∏–µ –∏—Ç–æ–≥–∏
        calculateTotals();
    }
}

// –†–∞—Å—á–µ—Ç –∏—Ç–æ–≥–æ–≤—ã—Ö —Å—É–º–º
function calculateTotals() {
    const rows = document.querySelectorAll('.invoice-item');
    let subtotal = 0;
    let totalDiscount = 0;
    
    // –°—É–º–º–∏—Ä—É–µ–º –≤—Å–µ –ø–æ–∑–∏—Ü–∏–∏
    rows.forEach(row => {
        const quantityInput = row.querySelector('input[name="item_quantity[]"]');
        const priceInput = row.querySelector('input[name="item_price[]"]');
        const discountPercentInput = row.querySelector('input[name="item_discount_percent[]"]');
        const discountInput = row.querySelector('input[name="item_discount[]"]');
        
        if (!quantityInput || !priceInput) return;
        
        const quantity = parseFloat(quantityInput.value.replace(',', '.')) || 0;
        const price = parseFloat(priceInput.value.replace(',', '.')) || 0;
        const discountPercent = parseFloat(discountPercentInput?.value.replace(',', '.')) || 0;
        
        const rowTotal = quantity * price;
        const rowDiscount = rowTotal * (discountPercent / 100);
        
        // –û–±–Ω–æ–≤–ª—è–µ–º –æ–±—â–∏–µ —Å—É–º–º—ã
        subtotal += rowTotal;
        totalDiscount += rowDiscount;
        
        // –û–±–Ω–æ–≤–ª—è–µ–º —Å–∫—Ä—ã—Ç–æ–µ –ø–æ–ª–µ —Å–æ —Å–∫–∏–¥–∫–æ–π
        if (discountInput) {
            discountInput.value = rowDiscount.toFixed(2).replace('.', ',');
        }
        
        // –û–±–Ω–æ–≤–ª—è–µ–º –æ—Ç–æ–±—Ä–∞–∂–∞–µ–º—É—é —Å—É–º–º—É –ø–æ —Å—Ç—Ä–æ–∫–µ
        const totalCell = row.querySelector('.item-total');
        if (totalCell) {
            totalCell.textContent = (rowTotal - rowDiscount).toFixed(2).replace('.', ',');
        }
    });
    
    // –û–±–Ω–æ–≤–ª—è–µ–º –ø–æ–¥—ã—Ç–æ–≥
    const subtotalElement = document.getElementById('subtotal');
    subtotalElement.textContent = subtotal.toFixed(2).replace('.', ',') + ' ‚ÇΩ';
    
    // –û–±–Ω–æ–≤–ª—è–µ–º –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –æ–±—â–µ–π —Å–∫–∏–¥–∫–∏
    const discountElement = document.getElementById('discount-display');
    const discountInput = document.getElementById('discount');
    
    if (discountElement) {
        discountElement.textContent = totalDiscount.toFixed(2).replace('.', ',') + ' ‚ÇΩ';
    }
    
    // –û–±–Ω–æ–≤–ª—è–µ–º —Å–∫—Ä—ã—Ç–æ–µ –ø–æ–ª–µ –¥–ª—è –ø–µ—Ä–µ–¥–∞—á–∏ –∑–Ω–∞—á–µ–Ω–∏—è –Ω–∞ —Å–µ—Ä–≤–µ—Ä
    if (discountInput) {
        discountInput.value = totalDiscount.toFixed(2).replace('.', ',');
    }
    
    // –ü—Ä–∏–º–µ–Ω—è–µ–º —Å–∫–∏–¥–∫—É –∫ –ø–æ–¥—ã—Ç–æ–≥—É
    const subtotalAfterDiscount = Math.max(0, subtotal - totalDiscount);
    
    // –í—ã—á–∏—Å–ª—è–µ–º –ù–î–° (20%) –æ—Ç —Å—É–º–º—ã –ø–æ—Å–ª–µ —Å–∫–∏–¥–∫–∏
    const tax = subtotalAfterDiscount * 0.2;
    const taxElement = document.getElementById('tax');
    taxElement.textContent = tax.toFixed(2).replace('.', ',') + ' ‚ÇΩ';
    
    // –í—ã—á–∏—Å–ª—è–µ–º –∏—Ç–æ–≥–æ–≤—É—é —Å—É–º–º—É
    const total = subtotalAfterDiscount + tax;
    const totalElement = document.getElementById('total');
    totalElement.textContent = total.toFixed(2).replace('.', ',') + ' ‚ÇΩ';
}

// –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–ª–µ–π —Å –¥–µ–Ω–µ–∂–Ω—ã–º–∏ –∑–Ω–∞—á–µ–Ω–∏—è–º–∏
function formatCurrencyInputs() {
    const currencyInputs = document.querySelectorAll('input[name="item_price[]"], input[name="item_quantity[]"], #discount');
    
    currencyInputs.forEach(input => {
        input.addEventListener('focus', function() {
            // –ü—Ä–∏ —Ñ–æ–∫—É—Å–µ –∑–∞–º–µ–Ω—è–µ–º –∑–∞–ø—è—Ç—É—é –Ω–∞ —Ç–æ—á–∫—É —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –µ—Å—Ç—å –∑–Ω–∞—á–µ–Ω–∏–µ
            if (this.value) {
                this.value = this.value.replace(/\s/g, '').replace(',', '.');
            }
        });
        
        input.addEventListener('blur', function() {
            // –ü—Ä–∏ –ø–æ—Ç–µ—Ä–µ —Ñ–æ–∫—É—Å–∞ —Ñ–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –µ—Å—Ç—å –∑–Ω–∞—á–µ–Ω–∏–µ
            if (this.value) {
                this.value = parseFloat(this.value.replace(',', '.')).toFixed(2).replace('.', ',');
            }
        });
    });
} 